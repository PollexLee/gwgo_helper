def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
    }

    signingConfigs {//签名配置
        release {//发布版签名配置
            storeFile file("sinochem_ship.keystore")//密钥文件路径
            storePassword "sinochem"//密钥文件密码
            keyAlias "ship_trace"//key别名
            keyPassword "sinochem"//key密码
        }
        debug {//debug版签名配置
            storeFile file("sinochem_ship.keystore")//密钥文件路径
            storePassword "sinochem"//密钥文件密码
            keyAlias "ship_trace"//key别名
            keyPassword "sinochem"//key密码
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.tencent.gwgohelper"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled true // 混淆
            zipAlignEnabled true // Zipalign优化
//            shrinkResources true  // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }


    packagingOptions {
        // Prevent the ELF library from getting corrupted.
        doNotStrip "*/arm64-v8a/libapp.so"
        doNotStrip "*/armeabi-v7a/libapp.so"
    }

    dataBinding {
        enabled = true
    }

}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
//    implementation 'androidx.'
    // 腾讯地图sdk
//    implementation 'com.tencent.map:tencent-map-vector-sdk:4.2.5'
    implementation 'androidx.appcompat:appcompat:1.0.2'

    implementation 'com.google.code.gson:gson:2.8.5'

    //3D地图so及jar
    implementation 'com.amap.api:3dmap:6.9.2'
    //定位功能
    implementation 'com.amap.api:location:4.7.0'
    //搜索功能
    implementation 'com.amap.api:search:6.9.2'
}
